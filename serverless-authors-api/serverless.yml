
service: serverless-authors-api
# app and org for use with dashboard.serverless.com
app: serverless-authors-api-app
org: jlortiz9903

# app and org for use with dashboard.serverless.com

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: us-east-2

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:Query"
        - "dynamodb:PutItem"
      Resource:
        - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.dynamodb.userTable}
        - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.dynamodb.userTable}/index/pk

  environment:
    DYNAMODB_USER_TABLE: ${self:custom.dynamodb.userTable}
    #JWT_SECRET: ${param:JWT_SECRET}


functions:
  createUser:
    handler: src/functions/createUser.createUser
    events:
      - http:
          method: post
          cors: true
          path: /v1/user
          request:
            schema:
              application/json: ${file(src/schema/create_user_request.json)}

plugins:
  - serverless-pseudo-parameters
  - serverless-mocha
custom:
  dynamodb:
    userTable: ${self:service}-userTable-${self:provider.stage}
  serverless-mocha-plugin:
    testTemplate: templates/test-template.ejs
    functionTemplate: templates/function-template.ejs
resources:
  Resources:
    userTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:custom.dynamodb.userTable}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST